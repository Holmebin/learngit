1.掌握Java基础知识（《Java核心技术卷1》或者《Head First Java》都是入门Java的很不错的书籍），当然你也可以边看视频边看书学习（推荐B站视频）。记得多总结！打好基础！把自己重要的东西都记录下来，面试考的很深入，尤其是常用类以及集合、并发类底层原理、面向对象SOLID原则和常见设计模式。
2.掌握多线程的简单实用（推荐《Java并发编程之美》或者《实战Java高并发程序设计》）。
3.学习完Java基础或者多线程之后，就开始每天抽出一点时间来学习计算机网络、算法和数据结构。为了提高自己的编程能力，你也可以坚持刷Leetcode。（以前大厂会考，现在小公司也会了，基础一般就背点经典题目和知道常用算法，推荐书籍《数据结构与算法分析Java语言描述》、这本比较难《算法导论》有空看《现代操作系统》、《TCP/IP详解：卷一》）
4.学习前端基础（HTML、CSS、JavaScript，推荐《JavaScript高级程序设计》),当然BootStrap、VUE（React国外用的多，可以了解）等等前端框架你也可以了解一下。
5.数据库学习MySQL（《高性能MySQL》、《SQL必知必会》）的基本使用，基本的增删改查，SQL命令，索引、存储过程这些都学一下吧，Redis的基本知识以及一些过期、缓存雪崩大厂考点。同时要学习Elasticsearch和MongoDB基本操作，了解Oracle、PostgreSQL与MySQL的区别！
6.建议学习J2ee框架之前学习一下Maven、Git（Git、GitHub、GitLab）的使用。（到处找Jar包，下载Jar包是真的麻烦费事，使用Maven可以为你省很多事情，gradle也逐渐主流，git版本管理工作必备）
7.学习Struts2（可不用学）、Spring、SpringMVC、Hibernate（一般都用Sring Data JPA了）、Mybatis、Log4j等框架的使用，熟悉Spring原理，然后很有必要学习一下SpringBoot2.x版和SpringCloud H版。
8.学习Linux的基本使用（常见命令、基本概念）
9.学习SpringCloud Alibaba（在SpringCloud部分组件不更新的情况下会成为主流，Dubbo个人觉得这个框架一般 ）、zookeeper、常见的消息队列（比如ActiveMq、RabbitMQ、kafka）的使用、Nginx（主流）、文件服务器、常见的服务集群搭建。（找b站或者github上分布式项目来学，边看视频，边自己做，查阅网上博客，效果更好,框架最好的资料就是官方文档）
10.有能力在时间允许的情况下学习安全认证、NIO、Docker、k8s和Netty,这样简历上也可以多点东西。
11.JVM的一些知识也是必学的（Java内存区域、虚拟机垃圾算法、虚拟垃圾收集器、JVM内存管理）推荐《深入理解Java虚拟机：JVM高级特性与最佳实践（最新第三版）》

-javaagent:D:\Program Files\JetBrains\jetbrains-agent.jar

https://fls.jetbrains-agent.com

没有项目经验怎么办?
如果实在没有实际项目让你去做，我觉得你可以通过下面几种方式：
1.在网上找一个符合自己能力与找工作需求的实战项目视频或者博客跟着老师一起做。做的过程中，你要有自己的思考，不要浅尝辄止，对于很多知识点，别人的讲解可能只是满足项目就够了，你自己想多点知识的话，对于重要的知识点就要自己学会去往深出学。
2.Github或者码云上面有很多实战类别项目，你可以选择一个来研究，为了让自己对这个项目更加理解，在理解原有代码的基础上，你可以对原有项目进行改进或者增加功能。
3.自己动手去做一个自己想完成的东西，遇到不会的东西就临时去学，现学现卖。 
